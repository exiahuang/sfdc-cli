sfTypeSwitcher = {
    "app": "CustomApplication",
    "appMenu": "AppMenu",
    "approvalProcess": "ApprovalProcess",
    "assignmentRules": "AssignmentRules",
    "autoResponseRules": "AutoResponseRules",
    "cls": "ApexClass",
    "community": "Community",
    "component": "ApexComponent",
    "connectedApp": "ConnectedApp",
    "crt": "Certificate",
    "customPermission": "CustomPermission",
    "dashboard": "Dashboard",
    "duplicateRule": "DuplicateRule",
    "dataSource": "ExternalDataSource",
    "email": "EmailTemplate",
    "escalationRules": "EscalationRules",
    "flexipage": "FlexiPage",
    "globalValueSet": "GlobalValueSet",
    "group": "Group",
    "homePageLayout": "HomePageLayout",
    "labels": "CustomLabels",
    "layout": "Layout",
    "letter": "Letterhead",
    "managedTopics": "ManagedTopics",
    "matchingRule": "MatchingRule",
    "network": "Network",
    "object": "CustomObject",
    "objectTranslation": "CustomObjectTranslation",
    "page": "ApexPage",
    "permissionset": "PermissionSet",
    "profile": "Profile",
    "queue": "Queue",
    "quickAction": "QuickAction",
    "remoteSite": "RemoteSiteSetting",
    "reportType": "ReportType",
    "report": "Report",
    "resource": "StaticResource",
    "role": "Role",
    "settings": "Settings",
    "sharingRules": "SharingRules",
    "site": "CustomSite",
    "tab": "CustomTab",
    "translation": "Translations",
    "territory2Type": "Territory2Type",
    "trigger": "ApexTrigger",
    "workflow": "Workflow"
}

SF_FLODER_TO_TYPE = {
    "actionLinkGroupTemplates": "ActionLinkGroupTemplate",
    "analyticSnapshots": "AnalyticSnapshot",
    "articleTypes": "ArticleType",
    "classes": "ApexClass",
    "components": "ApexComponent",
    "pages": "ApexPage",
    "apexTestSuite": "ApexTestSuite",
    "triggers": "ApexTrigger",
    "appMenus": "AppMenu",
    "approvalProcesses": "ApprovalProcess",
    "assignmentRules": "AssignmentRules",
    "aura": "AuraDefinitionBundle",
    "authProviders": "AuthProvider",
    "autoResponseRules": "AutoResponseRules",
    "bots": "BotVersion",
    "brandingSets": "BrandingSet",
    "callCenters": "CallCenter",
    "campaignInfluenceModels": "CampaignInfluenceModel",
    "caseSubjectParticles": "CaseSubjectParticle",
    "certs": "Certificate",
    "chatterExtensions": "ChatterExtension",
    "cleanDataServices": "CleanDataService",
    "cMSConnectSources": "CMSConnectSource",
    "communities": "Community",
    "communityTemplateDefinitions": "CommunityTemplateDefinition",
    "communityThemeDefinitions": "CommunityThemeDefinition",
    "connectedApps": "ConnectedApp",
    "contentAssets": "ContentAsset",
    "corsWhitelistOrigins": "CorsWhitelistOrigin",
    "cspTrustedSite": "CspTrustedSite",
    "applications": "CustomApplication",
    "applicationComponents": "CustomApplicationComponent",
    "feedFilters": "CustomFeedFilter",
    "labels": "CustomLabels",
    "objects": "CustomObject",
    "objectTranslations": "CustomObjectTranslation",
    "customPageWebLink": "CustomPageWebLink",
    "permissions": "CustomPermission",
    "sites": "CustomSite",
    "tabs": "CustomTab",
    "values": "CustomValue",
    "customValues": "CustomValue",
    "dashboards": "Dashboard",
    "dataCategoryGroups": "DataCategoryGroup",
    "delegateGroups": "DelegateGroup",
    "documents": "Document",
    "duplicateRules": "DuplicateRule",
    "eclairGeoDatas": "EclairGeoData",
    "emailServices": "EmailServicesFunction",
    "email": "EmailTemplate",
    "embeddedServiceBrandings": "EmbeddedServiceBranding",
    "embeddedServiceConfigs": "EmbeddedServiceConfig",
    "embeddedServiceFieldServices": "EmbeddedServiceFieldService",
    "embeddedServiceLiveAgents": "EmbeddedServiceLiveAgent",
    "entitlementProcesses": "EntitlementProcess",
    "entitlementTemplates": "EntitlementTemplate",
    "escalationRules": "EscalationRules",
    "eventDeliveries": "EventDelivery",
    "eventSubscriptions": "EventSubscription",
    "externalDataSources": "ExternalDataSource",
    "externalServiceRegistrations": "ExternalServiceRegistration",
    "featureParameterBooleans": "FeatureParameterBoolean",
    "featureParameterDates": "FeatureParameterDate",
    "featureParameterIntegers": "FeatureParameterInteger",
    "flexipages": "FlexiPage",
    "flows": "Flow",
    "flowCategories": "FlowCategory",
    "flowDefinitions": "FlowDefinition",
    "folders": "Folder",
    "globalPicklists": "GlobalPicklist",
    "globalPicklistValues": "GlobalPicklistValue",
    "globalValueSets": "GlobalValueSet",
    "globalValueSetTranslations": "GlobalValueSetTranslation",
    "groups": "Group",
    "homePageComponents": "HomePageComponent",
    "homePageLayouts": "HomePageLayout",
    "installedPackages": "InstalledPackage",
    "keywordLists": "KeywordList",
    "layouts": "Layout",
    "letterheads": "Letterhead",
    "lightningBolts": "LightningBolt",
    "lwc": "LightningComponentBundle",
    "lightningExperienceThemes": "LightningExperienceTheme",
    "liveChatAgentConfigs": "LiveChatAgentConfig",
    "liveChatButtons": "LiveChatButton",
    "liveChatDeployments": "LiveChatDeployment",
    "liveChatSensitiveDataRules": "LiveChatSensitiveDataRule",
    "managedTopics": "ManagedTopics",
    "matchingRules": "MatchingRule",
    "metadata": "Metadata",
    "metadataWithContents": "MetadataWithContent",
    "milestoneTypes": "MilestoneType",
    "mlDomains": "MlDomain",
    "moderationRules": "ModerationRule",
    "namedCredentials": "NamedCredential",
    "networks": "Network",
    "networkBrandings": "NetworkBranding",
    "packages": "Package",
    "pathAssistants": "PathAssistant",
    "permissionsets": "PermissionSet",
    "platformCachePartitions": "PlatformCachePartition",
    "portals": "Portal",
    "postTemplates": "PostTemplate",
    "presenceDeclineReasons": "PresenceDeclineReason",
    "presenceUserConfigs": "PresenceUserConfig",
    "profiles": "Profile",
    "profileActionOverrides": "ProfileActionOverride",
    "profilePasswordPolicies": "ProfilePasswordPolicy",
    "queues": "Queue",
    "queueRoutingConfigs": "QueueRoutingConfig",
    "quickActions": "QuickAction",
    "remoteSiteSettings": "RemoteSiteSetting",
    "reports": "Report",
    "reportTypes": "ReportType",
    "roles": "Role",
    "roleOrTerritorys": "RoleOrTerritory",
    "samlSsoConfigs": "SamlSsoConfig",
    "scontrols": "Scontrol",
    "serviceChannels": "ServiceChannel",
    "servicePresenceStatus": "ServicePresenceStatus",
    "sharedTos": "SharedTo",
    "sharingBaseRules": "SharingBaseRule",
    "sharingRules": "SharingRules",
    "sharingSets": "SharingSet",
    "siteDotComs": "SiteDotCom",
    "skills": "Skill",
    "standardValueSets": "StandardValueSet",
    "standardValueSetTranslations": "StandardValueSetTranslation",
    "staticresources": "StaticResource",
    "synonymDictionaries": "SynonymDictionary",
    "territories": "Territory",
    "territory2s": "Territory2",
    "territory2Models": "Territory2Model",
    "territory2Rules": "Territory2Rule",
    "territory2Types": "Territory2Type",
    "topicsForObjects": "TopicsForObjects",
    "transactionSecurityPolicies": "TransactionSecurityPolicy",
    "translations": "Translations",
    "userCriterias": "UserCriteria",
    "waveApplications": "WaveApplication",
    "waveDataflows": "WaveDataflow",
    "waveDashboards": "WaveDashboard",
    "waveDatasets": "WaveDataset",
    "waveLens": "WaveLens",
    "waveTemplateBundles": "WaveTemplateBundle",
    "waveXmds": "WaveXmd",
    "workflows": "Workflow"
}

AURA_DEFTYPE_EXT = {
    "APPLICATION": ".app",
    "CONTROLLER": "Controller.js",
    "COMPONENT": ".cmp",
    "EVENT": "Event.evt",
    "HELPER": "Helper.js",
    "STYLE": ".css",
    "DOCUMENTATION": ".auradoc",
    "RENDERER": "Renderer.js",
    "DESIGN": ".design",
    "INTERFACE": "",
    "PROVIDER": "",
    "MODEL": "",
    "TESTSUITE": "",
    "TOKENS": "",
    "SVG": ".svg"
}

AURA_TYPE = {
    ".app": "APPLICATION",
    "Controller.js": "CONTROLLER",
    ".cmp": "COMPONENT",
    "Event.evt": "EVENT",
    "Helper.js": "HELPER",
    ".css": "STYLE",
    ".auradoc": "DOCUMENTATION",
    "Renderer.js": "RENDERER",
    ".design": "DESIGN",
    ".svg": "SVG"
}
